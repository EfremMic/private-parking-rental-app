spring.application.name=payment-service

server.port=8084


# Stripe API Key
Stripe.api.key=sk_test_51PMaPVK8PnEMKrfFpNYUBXZP7hiaffT15ipisR6O2v6tfObaSNNoXcBM2vyIS69MLRuX5ku58VFQeWANLAFrl56300EtPME0R6


# Database Configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/payment_db  # Replace with your actual database URL
spring.datasource.username=postgres  # Replace with your actual username
spring.datasource.password=Xpdy2121  # Replace with your actual password
spring.datasource.driver-class-name=org.postgresql.Driver


# JPA/Hibernate Configuration
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# Hibernate will automatically create/update the database schema
spring.jpa.hibernate.ddl-auto=update

# Enable SQL logging (Optional: Remove or disable in production)
spring.jpa.show-sql=true

# Logging Configuration
logging.level.org.springframework=ERROR
logging.level.com.yourapp=INFO
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

################################################
################ RabbitMQ ######################
################################################
spring.rabbitmq.host= localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

user.exchange.name=user.exchange
user.queue.name=user.created.queue

# Consul Configuration
spring.cloud.consul.host=consul  # Docker hostname for the Consul container
spring.cloud.consul.port=8500
spring.cloud.consul.discovery.enabled=true
spring.cloud.consul.discovery.service-name=payment-service  # Unique for each service

# Health Check Configuration
spring.cloud.consul.discovery.health-check-path=/actuator/health
spring.cloud.consul.discovery.health-check-interval=10s

# Enable Actuator for Health Checks
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=always
