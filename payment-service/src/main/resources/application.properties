spring.application.name=payment-service

# Server Config
server.port=8089

# Stripe API Key
Stripe.api.key=sk_test_51PMaPVK8PnEMKrfFpNYUBXZP7hiaffT15ipisR6O2v6tfObaSNNoXcBM2vyIS69MLRuX5ku58VFQeWANLAFrl56300EtPME0R6

# RabbitMQ Configuration
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

# RabbitMQ Exchange and Queue Names
user.exchange.name=user.exchange
user.queue.name=user.events
payment.exchange.name=payment.exchange
payment.request.queue.name=payment-request-queue
payment.result.queue.name=payment-result-queue

# Stripe Configuration
stripe.api.key=sk_test_51H6hX7X0fh8Wz9cKnqFbiPOEWs

# Logging Config
logging.level.org.springframework.amqp=INFO
logging.level.com.parking.payment.paymentservice=DEBUG

# Hibernate will automatically create/update the database schema
spring.jpa.hibernate.ddl-auto=update

# Enable SQL logging (Optional: Remove or disable in production)
spring.jpa.show-sql=true

# Logging Configuration
logging.level.org.springframework=ERROR
logging.level.com.yourapp=INFO
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n


payment.request.queue=payment.request.queue
payment.result.queue=payment.result.queue

# H2 Database Configuration
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.h2.console.enabled=true

# Enable H2 console for in-memory database access
spring.h2.console.path=/h2-console

# Consul Configuration
spring.cloud.consul.host=consul
spring.cloud.consul.port=8500
spring.cloud.consul.discovery.enabled=true
spring.cloud.consul.discovery.register=true
spring.cloud.consul.discovery.service-name=payment-service
spring.cloud.consul.discovery.health-check-path=/actuator/health
spring.cloud.consul.discovery.health-check-interval=10s
management.endpoint.health.show-details=always
management.endpoints.web.exposure.include=*

management.health.consul.enabled=true
spring.cloud.consul.discovery.instance-id=${spring.cloud.consul.discovery.service-name}:${random.value}